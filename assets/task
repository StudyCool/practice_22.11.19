* Во всех заданиях обязательно использовать рекурсию.

1. Написать функцию, которая вычисляет факториал задан-
ного числа.

2. Написать функцию, которая выводит все числа из заданного
пользователем диапазона в прямом порядке. И еще одну
функцию – для вывода в обратном порядке.

3. Написать функцию, которая выводит переданное ей число
задом наперед.
Например: число 1234 вывести как 4321.

4. Написать функцию, которая считает сумму цифр числа.
Например: число 1357, сумма 1 + 3 + 5 + 7 = 16.

5. Написать функцию, которая принимает число и выводит
соответствующее количество вложенных пар круглых скобок.
Например: число 4 – (((()))).


Task2

Создать массив из 10 случайных чисел и написать несколько
функций для работы с ним.
1. Функция принимает массив и выводит его на экран.

2. Функция принимает массив и выводит только четные
элементы.

3. Функция принимает массив и возвращает сумму всех
элементов массива.

4. Функция принимает массив и возвращает его максималь-
ный элемент.

5. Функция добавления нового элемента в массив по ука-
занному индексу.

6. Функция удаления элемента из массива по указанному
индексу.





Task 3

Создать еще один массив из 5 случайных чисел и написать
следующие функции.

1. Функция принимает 2 массива и возвращает новый мас-
сив, в котором собраны все элементы из двух массивов
без повторений.


2. Функция принимает 2 массива и возвращает новый массив,
в котором собраны общие элементы (то есть элементы,
которые встречаются и в первом и во втором массивах)
без повторений.

3. Функция принимает 2 массива и возвращает новый мас-
сив, в котором собраны все элементы из первого массива,
которых нет во втором массиве.


Task 4
Создать массив фруктов и отсортировать его по алфавиту.
Написать следующие функции.

1. Вывод на экран с помощью document.write() в виде списка
(с помощью тегов ul и li).

2. Поиск фрукта в массиве. Функция принимает название
фрукта и возвращает индекс найденного элемента или -1,
если не найден. Поиск должен быть нерегистрозависимым.


Task 5

1. Написать функцию, которая принимает 2 строки и срав-
нивает их длину. Функция возвращает 1, если в первой
строке больше символов, чем во второй; -1 – если во вто-
рой больше символов, чем в первой; или 0 – если строки
одинаковой длины.

2. Написать функцию, которая переводит в верхний регистр
первый символ переданной строки.

3. Написать функцию, которая считает количество гласных
букв в переданной строке.

4. Написать функцию для проверки спама в переданной
строке. Функция возвращает true, если строка содержит
спам. Спамом считать следующие слова: 100% бесплатно,
увеличение продаж, только сегодня, не удаляйте, ххх.
Функция должна быть нечувствительна к регистру.

5. Написать функцию сокращения строки. Функция прини-
мает строку и ее максимальную длину. Если длина строки
больше, чем максимальная, то необходимо отбросить
лишние символы, добавив вместо них троеточие.
Например: truncate(“Hello, world!”, 8) должна вернуть
“Hello...”.

6. Написать функцию, которая проверяет, является ли пере-
данная строка палиндромом.

7. Написать функцию, которая считает количество слов в
предложении.

8. Написать функцию, которая возвращает самое длинное
слово из предложения.

9. Написать функцию, которая считает среднюю длину слова
в предложении.

10. Написать функцию, которая принимает строку и символ
и выводит индексы, по которым находится этот символ в
строке. Также вывести, сколько всего раз встречается этот
символ в строке.
